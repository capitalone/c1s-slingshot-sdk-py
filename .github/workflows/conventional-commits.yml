name: Conventional Commits

on:
  pull_request:
    branches: [main]

jobs:
  conventional-commits:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Install dependencies
        run: |
          uv sync --dev

      - name: Validate conventional commits
        run: |
          # Get the base branch commit
          BASE_SHA=$(git merge-base HEAD origin/main)

          # Check each commit in the PR
          echo "Checking commits from $BASE_SHA to HEAD"
          git log --oneline --pretty=format:"%s" $BASE_SHA..HEAD | while read commit_msg; do
            echo "Checking commit: $commit_msg"
            if ! echo "$commit_msg" | uv run cz check --commit-msg-file -; then
              echo "‚ùå Invalid commit message: $commit_msg"
              exit 1
            else
              echo "‚úÖ Valid commit message"
            fi
          done

  suggest-conventional-commit:
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('Conventional Commits')
            );

            if (!botComment) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `## üìù Conventional Commits Required

            This PR contains commits that don't follow the conventional commits format.

            Please use one of these formats:
            - \`feat: add new feature\`
            - \`fix: resolve bug\`
            - \`docs: update documentation\`
            - \`style: formatting changes\`
            - \`refactor: code restructuring\`
            - \`test: add or update tests\`
            - \`chore: maintenance tasks\`

            You can use \`make commit\` to create properly formatted commits interactively.

            For more details, see: https://www.conventionalcommits.org/`
              });
            }
